[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "x4companion"
dynamic = ["version"]
description = "A Companion web app for the game X4 foundations."
readme = "README.md"
requires-python = ">=3.13"
license = "MIT"
keywords = []
authors = [
  { name = "sam", email = "samueljfry@protonmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "djangorestframework==3.15.2",
  "drf-spectacular==0.28.0",
]

[project.urls]
Documentation = "https://github.com/sam/x4companion#readme"
Issues = "https://github.com/sam/x4companion/issues"
Source = "https://github.com/sam/x4companion"

[tool.hatch.version]
path = "src/x4companion/__about__.py"

[tool.hatch.envs.default]
extra-dependencies = [
  "pytest",
  "pytest-django",
]

[tool.hatch.envs.hatch-test]
default-args = ["--config-file=pyproject.toml"]
extra-dependencies = [
  "pytest",
  "pytest-django",
]

[tool.hatch.envs.default.scripts]
devserver = "python src/x4companion/manage.py runserver"
makemigrations = "python src/x4companion/manage.py makemigrations"
migrate = "python src/x4companion/manage.py migrate"
create-su = "python src/x4companion/manage.py createsuperuser --username admin --email admin@example.com"
spectacular = "python src/x4companion/manage.py spectacular --color --file schema.yml"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/x4companion tests}"

[tool.coverage.run]
source_pkgs = ["x4companion", "tests"]
branch = true
parallel = true
omit = [
  "src/x4companion/__about__.py",
  "*/migrations/*",
]

[tool.coverage.paths]
x4companion = ["src/x4companion", "*/x4companion/src/x4companion"]
tests = ["tests", "*/x4companion/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 79

[tool.ruff.lint]
pydocstyle.convention = "google"
extend-select = ["ALL"]
extend-ignore = ["COM812", "ISC001", "S101", "ANN101", "ANN003", "D105", "D106", "ARG", "TD", "FIX002", "RUF012"]
exclude = ["settings.py", "manage.py", "*/migrations/*"]

[tool.ruff.lint.per-file-ignores]
"__about__.py" = ["ALL"]
"__init__.py" = ["D", "F401", "TID252"]
"*/tests/*" = ["D", "S", "ANN", "PLR2004"]

[tool.pytest.ini_options]
python_files = "test_*.py"
pythonpath = ["src"]
testpaths = ["src"]
DJANGO_SETTINGS_MODULE = "x4companion.settings"
